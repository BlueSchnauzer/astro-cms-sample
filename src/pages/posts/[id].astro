---
import Layout from '../../layouts/Layout.astro';
import PostCard from '../../components/PostCard.astro';
import { fetchPosts, fetchSites } from '../../data/apiData';

export async function getStaticPaths() {
  const posts = await fetchPosts();
  const sites = await fetchSites();
  
  return posts.map(post => {
    const site = sites.find(s => s.id === post.siteId);
    const relatedPosts = posts
      .filter(p => p.id !== post.id && p.siteId === post.siteId)
      .slice(0, 3);
    
    return {
      params: { id: post.id },
      props: { 
        post,
        site,
        relatedPosts
      }
    };
  });
}

const { id } = Astro.params;
const { post, site, relatedPosts } = Astro.props;

if (!post) {
  return Astro.redirect('/404');
}

const formattedDate = new Date(post.publishedAt).toLocaleDateString('ja-JP', {
  year: 'numeric',
  month: 'long',
  day: 'numeric'
});
---

<Layout title={`${post.title} | Community Hub`} description={post.summary}>
  <article class="max-w-4xl mx-auto px-4 sm:px-6 lg:px-8 py-8">
    <!-- パンくずナビ -->
    <nav class="mb-8 text-sm">
      <ol class="flex items-center space-x-2 text-gray-500">
        <li>
          <a href="/" class="hover:text-blue-600">ホーム</a>
        </li>
        <li>
          <svg class="w-4 h-4" fill="currentColor" viewBox="0 0 20 20">
            <path fill-rule="evenodd" d="M7.293 14.707a1 1 0 010-1.414L10.586 10 7.293 6.707a1 1 0 011.414-1.414l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414 0z" clip-rule="evenodd" />
          </svg>
        </li>
        <li>
          <a href={`/sites/${post.siteId}`} class="hover:text-blue-600">
            {site?.name}
          </a>
        </li>
        <li>
          <svg class="w-4 h-4" fill="currentColor" viewBox="0 0 20 20">
            <path fill-rule="evenodd" d="M7.293 14.707a1 1 0 010-1.414L10.586 10 7.293 6.707a1 1 0 011.414-1.414l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414 0z" clip-rule="evenodd" />
          </svg>
        </li>
        <li class="text-gray-900 font-medium truncate">
          {post.title}
        </li>
      </ol>
    </nav>

    <!-- 記事ヘッダー -->
    <header class="mb-8">
      <div class="flex flex-wrap gap-2 mb-4">
        {post.tags.map(tag => (
          <a 
            href={`/tags/${tag.id}`}
            class="inline-block px-3 py-1 text-sm rounded-full text-white hover:opacity-80 transition-opacity"
            style={`background-color: ${tag.color || '#6B7280'}`}
          >
            {tag.name}
          </a>
        ))}
      </div>
      
      <h1 class="text-3xl md:text-4xl font-bold text-gray-900 mb-4">
        {post.title}
      </h1>
      
      <div class="flex items-center justify-between text-gray-600 mb-6">
        <div class="flex items-center space-x-4">
          <span class="flex items-center">
            <svg class="w-5 h-5 mr-2" fill="none" viewBox="0 0 24 24" stroke="currentColor">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z" />
            </svg>
            {post.author}
          </span>
          <span class="flex items-center">
            <svg class="w-5 h-5 mr-2" fill="none" viewBox="0 0 24 24" stroke="currentColor">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z" />
            </svg>
            {formattedDate}
          </span>
        </div>
        
        {site && (
          <a 
            href={`/sites/${site.id}`}
            class="flex items-center text-blue-600 hover:text-blue-700 font-medium"
          >
            <svg class="w-5 h-5 mr-2" fill="none" viewBox="0 0 24 24" stroke="currentColor">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 12a9 9 0 01-9 9m9-9a9 9 0 00-9-9m9 9H3m9 9v-9m0-9v9m0 9a9 9 0 01-9-9m9 9c0 5-4 9-9 9s-9-4-9-9m9-9c0-5 4-9 9-9s9 4 9 9" />
            </svg>
            {site.name}
          </a>
        )}
      </div>
      
      {post.thumbnail && (
        <div class="aspect-video bg-gray-200 rounded-lg overflow-hidden mb-6">
          <img 
            src={post.thumbnail} 
            alt={post.title}
            class="w-full h-full object-cover"
          />
        </div>
      )}
    </header>

    <!-- 記事内容 -->
    <div class="bg-white rounded-lg shadow-sm p-8 mb-8">
      <div class="prose prose-lg max-w-none">
        <p class="text-lg text-gray-700 leading-relaxed">
          {post.content}
        </p>
      </div>
    </div>

    <!-- 関連記事 -->
    {relatedPosts.length > 0 && (
      <section class="mt-12">
        <h2 class="text-2xl font-bold text-gray-900 mb-6">
          {site?.name}の関連記事
        </h2>
        <div class="grid grid-cols-1 md:grid-cols-3 gap-6">
          {relatedPosts.map(relatedPost => (
            <PostCard post={relatedPost} />
          ))}
        </div>
      </section>
    )}
  </article>
</Layout>